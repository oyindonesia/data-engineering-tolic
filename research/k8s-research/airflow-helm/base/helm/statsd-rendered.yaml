apiVersion: v1
data:
  mappings.yml: "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n---\n# \nmappings:\n  # Map dot separated stats to labels\n  - match: airflow.dagrun.dependency-check.*.*\n    name: \"airflow_dagrun_dependency_check\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.operator_successes_(.*)\n    match_type: regex\n    name: \"airflow_operator_successes\"\n    labels:\n      operator: \"$1\"\n\n  - match: airflow.operator_failures_(.*)\n    match_type: regex\n    name: \"airflow_operator_failures\"\n    labels:\n      operator: \"$1\"\n\n  - match: airflow.scheduler_heartbeat\n    match_type: regex\n    name: \"airflow_scheduler_heartbeat\"\n    labels:\n      type: counter\n\n  - match: airflow.dag_processor_heartbeat\n    match_type: regex\n    name: \"airflow_dag_processor_heartbeat\"\n    labels:\n      type: counter\n\n  - match: airflow.dag.*.*.duration\n    name: \"airflow_task_duration\"\n    labels:\n      dag_id: \"$1\"\n      task_id: \"$2\"\n\n  - match: airflow.dagrun.duration.success.*\n    name: \"airflow_dagrun_duration\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dagrun.duration.failed.*\n    name: \"airflow_dagrun_failed\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dagrun.schedule_delay.*\n    name: \"airflow_dagrun_schedule_delay\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dag_processing.last_runtime.*\n    name: \"airflow_dag_processing_last_runtime\"\n    labels:\n      dag_file: \"$1\"\n\n  - match: airflow.dag_processing.last_run.seconds_ago.*\n    name: \"airflow_dag_processing_last_run_seconds_ago\"\n    labels:\n      dag_file: \"$1\"\n\n  - match: airflow.pool.open_slots.*\n    name: \"airflow_pool_open_slots\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.pool.used_slots.*\n    name: \"airflow_pool_used_slots\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.pool.starving_tasks.*\n    name: \"airflow_pool_starving_tasks\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.executor.open_slots.*\n    name: \"airflow_executor_open_slots\"\n    labels:\n      executor: \"$1\"\n\n  - match: airflow.executor.queued_tasks.*\n    name: \"airflow_executor_queued_tasks\"\n    labels:\n      executor: \"$1\"\n\n  - match: airflow.executor.running_tasks.*\n    name: \"airflow_executor_running_tasks\"\n    labels:\n      executor: \"$1\"\n\n  - match: airflow.ti.running.*.*.*\n    name: \"airflow_ti_running\"\n    labels:\n      queue: \"$1\"\n      dag_id: \"$2\"\n      task_id: \"$3\""
kind: ConfigMap
metadata:
  labels:
    chart: airflow-1.16.0
    component: config
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-statsd
  namespace: airflow-dev
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9102"
    prometheus.io/scrape: "true"
  labels:
    chart: airflow-1.16.0
    component: statsd
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-statsd
  namespace: airflow-dev
spec:
  ports:
    - name: statsd-ingest
      port: 9125
      protocol: UDP
      targetPort: 9125
    - name: statsd-scrape
      port: 9102
      protocol: TCP
      targetPort: 9102
  selector:
    component: statsd
    release: airflow-dev
    tier: airflow
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chart: airflow-1.16.0
    component: statsd
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-statsd
  namespace: airflow-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      component: statsd
      release: airflow-dev
      tier: airflow
  template:
    metadata:
      labels:
        component: statsd
        release: airflow-dev
        tier: airflow
    spec:
      affinity: {}
      containers:
        - args:
            - --statsd.mapping-config=/etc/statsd-exporter/mappings.yml
          image: quay.io/prometheus/statsd-exporter:v0.28.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9102
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          name: statsd
          ports:
            - containerPort: 9125
              name: statsd-ingest
              protocol: UDP
            - containerPort: 9102
              name: statsd-scrape
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9102
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /etc/statsd-exporter/mappings.yml
              name: config
              subPath: mappings.yml
      nodeSelector: {}
      restartPolicy: Always
      securityContext:
        runAsUser: 65534
      serviceAccountName: airflow-dev-statsd
      terminationGracePeriodSeconds: 30
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-dev-statsd
          name: config
