apiVersion: v1
data:
  airflow.cfg: "[celery]\nflower_url_prefix = \nworker_concurrency = 16\n\n[celery_kubernetes_executor]\nkubernetes_queue = kubernetes\n\n[core]\nauth_manager = airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\ncolored_console_log = False\ndags_folder = /opt/airflow/dags/repo/tests/dags\nexecutor = LocalKubernetesExecutor\nload_examples = False\nremote_logging = False\n\n[elasticsearch]\njson_format = True\nlog_id_template = {dag_id}_{task_id}_{execution_date}_{try_number}\n\n[elasticsearch_configs]\nmax_retries = 3\nretry_timeout = True\ntimeout = 30\n\n[kerberos]\nccache = /var/kerberos-ccache/cache\nkeytab = /etc/airflow.keytab\nprincipal = airflow@FOO.COM\nreinit_frequency = 3600\n\n[kubernetes]\nairflow_configmap = airflow-dev-config\nairflow_local_settings_configmap = airflow-dev-config\nmulti_namespace_mode = False\nnamespace = airflow-dev\npod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml\nworker_container_repository = apache/airflow\nworker_container_tag = 2.10.5\n\n[kubernetes_executor]\nmulti_namespace_mode = False\nnamespace = airflow-dev\npod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml\nworker_container_repository = apache/airflow\nworker_container_tag = 2.10.5\n\n[logging]\ncolored_console_log = False\nremote_logging = False\n\n[metrics]\nstatsd_host = airflow-dev-statsd\nstatsd_on = True\nstatsd_port = 9125\nstatsd_prefix = airflow\n\n[scheduler]\nrun_duration = 41460\nstandalone_dag_processor = False\nstatsd_host = airflow-dev-statsd\nstatsd_on = True\nstatsd_port = 9125\nstatsd_prefix = airflow\n\n[webserver]\nenable_proxy_fix = True\nrbac = True"
  airflow_local_settings.py: |2-

    from airflow.www.utils import UIAlert

    DASHBOARD_UIALERTS = [
      UIAlert(
        'Usage of a dynamic webserver secret key detected. We recommend a static webserver secret key instead.'
        ' See the <a href='
        '"https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#webserver-secret-key" '
        'target="_blank" rel="noopener noreferrer">'
        'Helm Chart Production Guide</a> for more details.',
        category="warning",
        roles=["Admin"],
        html=True,
      )
    ]
  pod_template_file.yaml: "\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: placeholder-name\n  labels:\n    tier: airflow\n    component: worker\n    release: airflow-dev\n  annotations:\n    cluster-autoscaler.kubernetes.io/safe-to-evict: \"false\"\nspec:\n  initContainers:\n    \n    - name: git-sync-init\n      image: registry.k8s.io/git-sync/git-sync:v4.3.0\n      imagePullPolicy: IfNotPresent\n      securityContext:\n        runAsUser: 65533\n      envFrom:  \n        []\n      env:\n        - name: GIT_SYNC_REV\n          value: \"HEAD\"\n        - name: GITSYNC_REF\n          value: \"v2-2-stable\"\n        - name: GIT_SYNC_BRANCH\n          value: \"v2-2-stable\"\n        - name: GIT_SYNC_REPO\n          value: \"https://github.com/apache/airflow.git\"\n        - name: GITSYNC_REPO\n          value: \"https://github.com/apache/airflow.git\"\n        - name: GIT_SYNC_DEPTH\n          value: \"1\"\n        - name: GITSYNC_DEPTH\n          value: \"1\"\n        - name: GIT_SYNC_ROOT\n          value: \"/git\"\n        - name: GITSYNC_ROOT\n          value: \"/git\"\n        - name: GIT_SYNC_DEST\n          value: \"repo\"\n        - name: GITSYNC_LINK\n          value: \"repo\"\n        - name: GIT_SYNC_ADD_USER\n          value: \"true\"\n        - name: GITSYNC_ADD_USER\n          value: \"true\"\n        - name: GITSYNC_PERIOD\n          value: \"5s\"\n        - name: GIT_SYNC_MAX_SYNC_FAILURES\n          value: \"0\"\n        - name: GITSYNC_MAX_FAILURES\n          value: \"0\"\n        - name: GIT_SYNC_ONE_TIME\n          value: \"true\"\n        - name: GITSYNC_ONE_TIME\n          value: \"true\"\n      resources: \n        {}\n      volumeMounts:\n      - name: dags\n        mountPath: /git\n  containers:\n    - envFrom:      \n        []\n      env:\n        - name: AIRFLOW__CORE__EXECUTOR\n          value: LocalExecutor      \n        # Hard Coded Airflow Envs\n        - name: AIRFLOW__CORE__FERNET_KEY\n          valueFrom:\n            secretKeyRef:\n              name: airflow-dev-fernet-key\n              key: fernet-key\n        - name: AIRFLOW_HOME\n          value: /opt/airflow\n        # For Airflow <2.3, backward compatibility; moved to [database] in 2.3\n        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN\n          valueFrom:\n            secretKeyRef:\n              name: airflow-dev-metadata\n              key: connection\n        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN\n          valueFrom:\n            secretKeyRef:\n              name: airflow-dev-metadata\n              key: connection\n        - name: AIRFLOW_CONN_AIRFLOW_DB\n          valueFrom:\n            secretKeyRef:\n              name: airflow-dev-metadata\n              key: connection\n        - name: AIRFLOW__WEBSERVER__SECRET_KEY\n          valueFrom:\n            secretKeyRef:\n              name: airflow-dev-webserver-secret-key\n              key: webserver-secret-key      \n        # Dynamically created environment variables\n        # Dynamically created secret envs\n        \n        # Extra env      \n      image: apache/airflow:2.10.5\n      imagePullPolicy: IfNotPresent\n      securityContext: \n        allowPrivilegeEscalation: false\n        capabilities:\n          drop:\n            - ALL\n      name: base\n      resources:\n        {}\n      volumeMounts:\n        - mountPath: \"/opt/airflow/logs\"\n          name: logs\n        - name: config\n          mountPath: \"/opt/airflow/airflow.cfg\"\n          subPath: airflow.cfg\n          readOnly: true\n        - name: config\n          mountPath: \"/opt/airflow/config/airflow_local_settings.py\"\n          subPath: airflow_local_settings.py\n          readOnly: true\n        - name: dags\n          mountPath: /opt/airflow/dags\n          readOnly: True\n  restartPolicy: Never\n  securityContext: \n    runAsUser: 50000\n    fsGroup: 0\n  nodeSelector:\n    {}\n  affinity:\n    {}\n  terminationGracePeriodSeconds: 600\n  tolerations:\n    []\n  topologySpreadConstraints:\n    []\n  serviceAccountName: \"airflow-dev-worker\"\n  volumes:\n  - name: dags\n    emptyDir:\n      {}\n  - emptyDir:\n      {}\n    name: logs\n  - configMap:\n      name: airflow-dev-config\n    name: config"
kind: ConfigMap
metadata:
  labels:
    chart: airflow-1.16.0
    component: config
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-config
  namespace: airflow-dev
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chart: airflow-1.16.0
    component: scheduler
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-scheduler
  namespace: airflow-dev
spec:
  clusterIP: None
  ports:
    - name: task-logs
      port: 8793
      protocol: TCP
      targetPort: 8793
  selector:
    component: scheduler
    release: airflow-dev
    tier: airflow
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chart: airflow-1.16.0
    component: webserver
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-webserver
  namespace: airflow-dev
spec:
  ports:
    - name: airflow-ui
      nodePort: 30082
      port: 8082
      targetPort: 8080
  selector:
    component: webserver
    release: airflow-dev
    tier: airflow
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chart: airflow-1.16.0
    component: webserver
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-webserver
  namespace: airflow-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      component: webserver
      release: airflow-dev
      tier: airflow
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/airflow-config: 0028ccda6fab8593880a6a9bdf1932a5c2aa9f67699caf062ad623ff87cd9293
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/metadata-secret: af60d048a7b54f4399cb20825e33752a42957de691beb74eabcdab12da4b5c25
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/webserver-config: 2f3fdfd294a37094d2abee43b2b09888a5c195ee03414996bf99a4681658af94
        checksum/webserver-secret-key: ea4d0c0ba9cd682acaaa59be937fdda490a67bdf8439f19011d8d01b5d16e17f
      labels:
        component: webserver
        release: airflow-dev
        tier: airflow
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: webserver
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - bash
            - -c
            - exec airflow webserver
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          name: webserver
          ports:
            - containerPort: 8080
              name: airflow-ui
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 20
          volumeMounts:
            - mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
              name: config
              readOnly: true
              subPath: pod_template_file.yaml
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      initContainers:
        - args:
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=60
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      nodeSelector: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-dev-webserver
      terminationGracePeriodSeconds: 30
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-dev-config
          name: config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    chart: airflow-1.16.0
    component: scheduler
    executor: LocalKubernetesExecutor
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-scheduler
  namespace: airflow-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      component: scheduler
      release: airflow-dev
      tier: airflow
  serviceName: airflow-dev-scheduler
  template:
    metadata:
      annotations:
        checksum/airflow-config: 0028ccda6fab8593880a6a9bdf1932a5c2aa9f67699caf062ad623ff87cd9293
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/metadata-secret: af60d048a7b54f4399cb20825e33752a42957de691beb74eabcdab12da4b5c25
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/result-backend-secret: 98a68f230007cfa8f5d3792e1aff843a76b0686409e4a46ab2f092f6865a1b71
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        component: scheduler
        release: airflow-dev
        tier: airflow
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: scheduler
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - bash
            - -c
            - exec airflow scheduler
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
                  airflow jobs check --job-type SchedulerJob --local
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 20
          name: scheduler
          ports:
            - containerPort: 8793
              name: worker-logs
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
                  airflow jobs check --job-type SchedulerJob --local
            failureThreshold: 6
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 20
          volumeMounts:
            - mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
              name: config
              readOnly: true
              subPath: pod_template_file.yaml
            - mountPath: /opt/airflow/logs
              name: logs
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
            - mountPath: /opt/airflow/dags
              name: dags
              readOnly: true
        - env:
            - name: GIT_SYNC_REV
              value: HEAD
            - name: GITSYNC_REF
              value: v2-2-stable
            - name: GIT_SYNC_BRANCH
              value: v2-2-stable
            - name: GIT_SYNC_REPO
              value: https://github.com/apache/airflow.git
            - name: GITSYNC_REPO
              value: https://github.com/apache/airflow.git
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GITSYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_ROOT
              value: /git
            - name: GITSYNC_ROOT
              value: /git
            - name: GIT_SYNC_DEST
              value: repo
            - name: GITSYNC_LINK
              value: repo
            - name: GIT_SYNC_ADD_USER
              value: "true"
            - name: GITSYNC_ADD_USER
              value: "true"
            - name: GITSYNC_PERIOD
              value: 5s
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "0"
            - name: GITSYNC_MAX_FAILURES
              value: "0"
          envFrom: []
          image: registry.k8s.io/git-sync/git-sync:v4.3.0
          imagePullPolicy: IfNotPresent
          name: git-sync
          resources: {}
          securityContext:
            runAsUser: 65533
          volumeMounts:
            - mountPath: /git
              name: dags
        - args:
            - bash
            - /clean-logs
          env:
            - name: AIRFLOW__LOG_RETENTION_DAYS
              value: "15"
            - name: AIRFLOW__LOG_CLEANUP_FREQUENCY_MINUTES
              value: "15"
            - name: AIRFLOW_HOME
              value: /opt/airflow
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          name: scheduler-log-groomer
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
      initContainers:
        - args:
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=60
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
        - env:
            - name: GIT_SYNC_REV
              value: HEAD
            - name: GITSYNC_REF
              value: v2-2-stable
            - name: GIT_SYNC_BRANCH
              value: v2-2-stable
            - name: GIT_SYNC_REPO
              value: https://github.com/apache/airflow.git
            - name: GITSYNC_REPO
              value: https://github.com/apache/airflow.git
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GITSYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_ROOT
              value: /git
            - name: GITSYNC_ROOT
              value: /git
            - name: GIT_SYNC_DEST
              value: repo
            - name: GITSYNC_LINK
              value: repo
            - name: GIT_SYNC_ADD_USER
              value: "true"
            - name: GITSYNC_ADD_USER
              value: "true"
            - name: GITSYNC_PERIOD
              value: 5s
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "0"
            - name: GITSYNC_MAX_FAILURES
              value: "0"
            - name: GIT_SYNC_ONE_TIME
              value: "true"
            - name: GITSYNC_ONE_TIME
              value: "true"
          envFrom: []
          image: registry.k8s.io/git-sync/git-sync:v4.3.0
          imagePullPolicy: IfNotPresent
          name: git-sync-init
          resources: {}
          securityContext:
            runAsUser: 65533
          volumeMounts:
            - mountPath: /git
              name: dags
      nodeSelector: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-dev-scheduler
      terminationGracePeriodSeconds: 10
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-dev-config
          name: config
        - emptyDir: {}
          name: dags
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "2"
  labels:
    chart: airflow-1.16.0
    component: create-user-job
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-create-user
  namespace: airflow-dev
spec:
  template:
    metadata:
      labels:
        component: create-user-job
        release: airflow-dev
        tier: airflow
    spec:
      affinity: {}
      containers:
        - args:
            - bash
            - -c
            - |-
              exec \
              airflow users create "$@"
            - --
            - -r
            - Admin
            - -u
            - admin
            - -e
            - admin@example.com
            - -f
            - admin
            - -l
            - user
            - -p
            - admin
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          name: create-user
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      nodeSelector: {}
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-dev-create-user-job
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-dev-config
          name: config
  ttlSecondsAfterFinished: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
  labels:
    chart: airflow-1.16.0
    component: run-airflow-migrations
    heritage: Helm
    release: airflow-dev
    tier: airflow
  name: airflow-dev-run-airflow-migrations
  namespace: airflow-dev
spec:
  template:
    metadata:
      labels:
        component: run-airflow-migrations
        release: airflow-dev
        tier: airflow
    spec:
      affinity: {}
      containers:
        - args:
            - bash
            - -c
            - |-
              exec \
              airflow db migrate
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-dev-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-dev-metadata
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: webserver-secret-key
                  name: airflow-dev-webserver-secret-key
          envFrom: []
          image: apache/airflow:2.10.5
          imagePullPolicy: IfNotPresent
          name: run-airflow-migrations
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      nodeSelector: {}
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-dev-migrate-database-job
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-dev-config
          name: config
  ttlSecondsAfterFinished: 300
